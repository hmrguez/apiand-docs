"use strict";(self.webpackChunkapiand_docs=self.webpackChunkapiand_docs||[]).push([[153],{6499:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Talk about Apiand","href":"/apiand-docs/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Getting started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Install","href":"/apiand-docs/docs/getting-started/installing-apiand","docId":"getting-started/installing-apiand","unlisted":false}],"href":"/apiand-docs/docs/category/getting-started"},{"type":"category","label":"Collaborate","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"How to add templates","href":"/apiand-docs/docs/collaborate/add-templates","docId":"collaborate/add-templates","unlisted":false},{"type":"link","label":"How to add new cli parameters","href":"/apiand-docs/docs/collaborate/add-cli-parameters","docId":"collaborate/add-cli-parameters","unlisted":false}],"href":"/apiand-docs/docs/category/collaborate"}]},"docs":{"collaborate/add-cli-parameters":{"id":"collaborate/add-cli-parameters","title":"How to add new cli parameters","description":"Typically when adding a new architecture type you will need to add new parameters to the CLI. This guide will show you how to do that.","sidebar":"tutorialSidebar"},"collaborate/add-templates":{"id":"collaborate/add-templates","title":"How to add templates","description":"Each template needs 2 parts to work: the template itself and the config class.","sidebar":"tutorialSidebar"},"getting-started/installing-apiand":{"id":"getting-started/installing-apiand","title":"Install","description":"To install Apiand.CLI as a global tool, run the following command in your terminal:","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Talk about Apiand","description":"Apiand is a CLI tool that helps you create projects from templates. It is designed to be extensible and easy to use. It is built on top of the .NET Core platform and uses the System.CommandLine library to handle command-line arguments.","sidebar":"tutorialSidebar"}}}}')}}]);