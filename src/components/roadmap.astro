---
import {CheckCircle, Circle, ArrowRight, Info, GitCompareArrows} from 'lucide-react';
import {Card} from '@astrojs/starlight/components';
import AnimatedText from "./react/ui/animated-text.tsx";

const roadmapItems = [
    {
        status: 'completed',
        title: 'Core Framework',
        description: 'Solid foundation with modularity, DI container, and developer-first APIs',
    },
    {
        status: 'completed',
        title: 'CLI Tooling',
        description: 'Generate services, components and connect your architecture seamlessly',
    },
    {
        status: 'active',
        title: 'Multi-Architecture Templates',
        description: 'DDD, Hexagonal, CQRS and microservice patterns out of the box',
        timeframe: 'Current Focus'
    },
    {
        status: 'upcoming',
        title: 'Community-made Templates',
        description: 'Support for a community marketplace for templates, to let you build and publish your own projects',
        timeframe: 'Short-term'
    },
    {
        status: 'upcoming',
        title: 'VS Studio / Rider plugins',
        description: 'Add a UI wrapper for the CLI as a plugin for your IDE of preference',
        timeframe: 'Short-term'
    },
    {
        status: 'upcoming',
        title: 'Cloud-Native Integration',
        description: 'Seamless deployment to major cloud providers with zero configuration',
        timeframe: 'Medium-term'
    },
    {
        status: 'upcoming',
        title: 'Enterprise Features',
        description: 'Advanced logging, tracing, metrics and documentation generation',
        timeframe: 'Long-term'
    },
];
---

<Card>
    <section id="roadmap" class="flex flex-col gap-10">
        <AnimatedText client:load
                      as="h2"
                      className="text-3xl md:text-4xl font-bold mb-12 text-center"
                      animation="fade-in-up"
        >
            Product <span class="text-gradient">Roadmap</span>
        </AnimatedText>

        <AnimatedText client:load
                      as="div"
                      className="mb-10 p-4 rounded-lg roadmap-card border flex items-start gap-3 max-w-3xl mx-auto mt-10"
                      animation="fade-in"
                      delay={100}
        >
            <Info className="h-5 w-5 text-blue-600 flex-shrink-0 mt-0.5"/>
            <p class="text-sm text-muted-foreground">
                This roadmap reflects our current development priorities and planned features.
                The sequence and scope of upcoming features may change based on community feedback and evolving
                requirements.
            </p>
        </AnimatedText>

        <div class="relative mt-16">
            <!-- Timeline line -->
            <div
                    class="hidden md:block absolute left-1/2 top-0 bottom-0 w-0.5 bg-gradient-to-b from-blue-300 to-blue-500/30 -translate-x-1/2"
            ></div>

            <div class="space-y-12 relative">
                {roadmapItems.map((item, index) => (
                        <div class={`flex flex-col md:flex-row items-center ${index % 2 !== 0 ? 'md:flex-row-reverse' : ''} gap-8 md:gap-0`}>
                            <AnimatedText client:load
                                          as="div"
                                          className={`w-full md:w-1/2 ${
                                              index % 2 === 0
                                                  ? 'text-right md:pr-10'
                                                  : 'text-left md:pl-10 md:pr-0'
                                          }`}
                                          animation={index % 2 === 0 ? "fade-in-up" : "slide-in-right"}
                                          delay={index * 100}
                            >
                                <div class="roadmap-card p-5 rounded-lg border transition-all hover:shadow-md">
                                    <div class="flex justify-between mb-2 text-sm">
                                        <p class="font-bold text-md">{item.title}</p>
                                        {item.timeframe && (
                                                <span class={`text-sm font-medium px-2 py-1 rounded-xl ${
                                                    item.status === 'completed' ? 'bg-green-100 text-green-700' :
                                                        item.status === 'active' ? 'bg-indigo-100 text-indigo-700' :
                                                            'bg-gray-100 text-gray-700'
                                                }`}>
                                            {item.timeframe}
                                        </span>
                                        )}
                                    </div>
                                    <p class="text-muted-foreground">{item.description}</p>
                                </div>
                            </AnimatedText>

                            <div class="flex items-center justify-center relative">
                                <div class="md:absolute md:left-1/2 md:-translate-x-1/2 z-10">
                                    {item.status === 'completed' ? (
                                            <div class="w-10 h-10 rounded-full bg-green-100 flex items-center justify-center border-4 border-white">
                                                <CheckCircle className="h-6 w-6 text-green-600"/>
                                            </div>
                                    ) : item.status === 'active' ? (
                                            <div class="w-10 h-10 rounded-full bg-indigo-100 flex items-center justify-center border-4 border-white">
                                                <GitCompareArrows className="h-6 w-6 text-indigo-600"/>
                                            </div>
                                    ) : (
                                            <div class="w-10 h-10 rounded-full bg-gray-100 flex items-center justify-center border-4 border-white">
                                                <Circle className="h-6 w-6 text-gray-400"/>
                                            </div>
                                    )}
                                </div>
                            </div>

                            <div class="md:w-1/2"></div>
                        </div>
                ))}
            </div>
        </div>

        <style>
            .roadmap-card {
                background-color: var(--roadmap-card-bg);
                border-color: var(--roadmap-card-border);
            }

            /* Adjust timeline circle border color based on theme */
            [data-theme='light'] .rounded-full {
                border-color: var(--roadmap-card-bg);
            }

            [data-theme='dark'] .rounded-full {
                border-color: var(--sl-color-gray-6);
            }
        </style>
    </section>
</Card>
